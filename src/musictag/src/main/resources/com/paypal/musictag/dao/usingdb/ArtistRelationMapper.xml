<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paypal.musictag.dao.usingdb.ArtistRelationMapper">
	<select id="findArtistCreditLinkWithCount" resultType="map">

	with first_level as (
		select ar1.id as source, ar2.id as target, sum(ac1.ref_count) as count
		from artist_credit_name as acn1 
			join artist as ar1 on acn1.artist = ar1.id
			join artist_credit as ac1 on acn1.artist_credit = ac1.id
			join artist_credit_name as acn2 on acn2.artist_credit = acn1.artist_credit 
			join artist as ar2 on ar2.id = acn2.artist
		where ar1.gid =#{artistGid, typeHandler=com.paypal.musictag.util.UuidTypeHandler, javaType=java.util.UUID, jdbcType=VARCHAR} and ar2.gid != #{artistGid, typeHandler=com.paypal.musictag.util.UuidTypeHandler, javaType=java.util.UUID, jdbcType=VARCHAR}
		group by source, target
		order by count desc
		limit 30)
	
	select * from first_level 
	union
	(select fl.target as source, acn2.artist as target,sum(ac1.ref_count) as count
	from artist_credit_name as acn1
		join first_level as fl on fl.target = acn1.artist
		join artist as ar1 on ar1.id = acn1.artist
		join artist_credit as ac1 on acn1.artist_credit = ac1.id
		join artist_credit_name as acn2 on acn2.artist_credit = acn1.artist_credit
		join artist as ar2 on ar2.id = acn2.artist
	where fl.target != acn2.artist and ar2.gid !=#{artistGid, typeHandler=com.paypal.musictag.util.UuidTypeHandler, javaType=java.util.UUID, jdbcType=VARCHAR}
	group by fl.target, acn2.artist
	order by count desc
	limit 30);
	
	</select>
	
	<select id="findArtistCreditNode" resultType="map">
		select id, gid, name 
		from artist
		where id in
		<foreach item="artistId" collection='artistIds' open="(" separator="," close=")">
			#{artistId}
		</foreach>
	</select>
</mapper>